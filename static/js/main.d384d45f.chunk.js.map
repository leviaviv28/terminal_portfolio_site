{"version":3,"sources":["Matrix.js","Terminal.js","reportWebVitals.js","index.js"],"names":["Matrix","props","state","matrix","Array","length","fill","width","fillTopOfMatrix","bind","this","interval","setInterval","speed","clearInterval","className","map","row","i","col","j","random_row","Math","random","push","randomJapaneseCharacter","setState","slice","japanese_characters","floor","React","Component","Terminal","outputBuffer","currentCmd","previousCmds","previousCmdsIndex","currentDir","currentCursorPos","isCursorHighlighted","onKeyPressed","addNewOutputToBuffer","runCommand","startCursorBlink","toggleCursor","moveCursor","config","user","fetch","then","res","json","generateWelcomeMessage","document","addEventListener","intervalID","tabIndex","ref","el","inputLine","renderInputLine","intervalId","event","scrollIntoView","keyCode","newCommand","key","result","concat","behavior","preventDefault","console","log","direction","newCursorPos","cmdOutput","newOutput","cursorStyle","prefix","preCursor","cursor","postCursor","trim","generateSocials","displayResume","welcomeMsg","welcome","split","commands","cmd","index","onClick","commandClicked","name","description","socials","social","href","url","resume","header","skills","line","experience","title","company","location","duration","responsibilities","resp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d384d45f.chunk.js","sourcesContent":["import React from 'react';\nimport './Matrix.css'\n\n// Most of this component was written using the GitHub Copilot tool.\nclass Matrix extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            matrix: Array(props.length).fill(Array(props.width).fill(''))\n        };\n\n        this.fillTopOfMatrix = this.fillTopOfMatrix.bind(this);\n    }\n\n    componentDidMount() {\n        this.interval = setInterval(() => {\n            this.fillTopOfMatrix();\n        }, this.props.speed);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    render() {\n        return (\n            <div className=\"Matrix\">\n                {/* Render each line of the matrix with monospace between elements*/}\n                {this.state.matrix.map((row, i) => {\n                    return (\n                        <div key={i} className=\"Matrix-row\">\n                            {row.map((col, j) => {\n                                return (\n                                    <span key={j} className=\"Matrix-col\">\n                                        {col ? col : \"\\u00a0\\u00a0\"}\n                                    </span>\n                                );\n                            })}\n                        </div>\n                    );\n                })}\n            </div>\n        );\n    }\n\n    fillTopOfMatrix() {\n        // Fill random slots in the top row of the matrix with a random number\n        const random_row = []\n        for (let i = 0; i < this.props.width; i++) {\n            // 40% chance to fill slot with a japanese character, otherwise null\n            if (Math.random() < 0.4) {\n                random_row.push(this.randomJapaneseCharacter())\n            } else {\n                random_row.push(null)\n            }\n        }\n        // Update the state with the new row, and remove last row\n        this.setState({\n            matrix: [random_row, ...this.state.matrix.slice(0, -1)]\n        })\n    }\n\n    randomJapaneseCharacter() {\n        // Return a random japanese character\n        const japanese_characters = 'あいうえおかきくけこさしすせそたちつてとなにぬねのはひふへほまみむめもやゆよらりるれろわをん'\n        const random_index = Math.floor(Math.random() * japanese_characters.length)\n        return japanese_characters[random_index]\n    }\n}\n\nexport default Matrix;","import React from \"react\";\nimport \"./Terminal.css\";\nimport \"./Crt.css\"\nimport Matrix from \"./Matrix\";\n\n// TODO: Add resume section, about me maybe?, add animation to drawing?\n\nclass Terminal extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n          outputBuffer: [],\n          currentCmd: \"\",\n          previousCmds: [],\n          previousCmdsIndex: -1,\n          currentDir: \"/home\",\n          currentCursorPos: 0,\n          isCursorHighlighted: true\n        };\n\n        this.onKeyPressed = this.onKeyPressed.bind(this);\n        this.addNewOutputToBuffer = this.addNewOutputToBuffer.bind(this);\n        this.runCommand = this.runCommand.bind(this);\n\n        this.startCursorBlink = this.startCursorBlink.bind(this);\n        this.toggleCursor = this.toggleCursor.bind(this);\n        this.moveCursor = this.moveCursor.bind(this);\n        \n\n        this.config = {}\n        this.user = `visitor@Levi_Portfolio_Site`;\n    }\n\n    componentDidMount() {\n        fetch('/terminal_portfolio_site/config.json')\n        .then((res) => res.json())\n        .then(json => this.config = json)\n        .then(() => {\n            \n            this.setState({\n                outputBuffer: this.generateWelcomeMessage(),\n            });\n        });\n\n        this.startCursorBlink()\n        document.addEventListener(\"keydown\", this.onKeyPressed)\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.intervalID);\n    }\n\n    render() {\n        return (\n                <div className=\"Crt\">\n                    <div className=\"TerminalDiv\" tabIndex=\"0\">\n                        <span className=\"outputBufferSpan\">\n                            {this.state.outputBuffer}\n                        </span>\n                        <span className=\"inputSpan\" ref={(el) => this.inputLine = el}>\n                            {this.renderInputLine()}\n                        </span>\n                    </div>\n                </div>\n        );\n    }\n\n    startCursorBlink() {\n        this.intervalId = setInterval(this.toggleCursor, 350);\n    }\n\n    toggleCursor() {\n        this.setState({isCursorHighlighted: !this.state.isCursorHighlighted});\n    }\n\n    onKeyPressed(event) {\n        if (this.inputLine) {\n            this.inputLine.scrollIntoView();\n        }\n        \n        if ((event.keyCode >= 65 && event.keyCode <= 90) || (event.keyCode >= 48 && event.keyCode <= 57) || (event.keyCode >= 186 && event.keyCode <= 192)) {\n            const newCommand = this.state.currentCmd.slice(0, this.state.currentCursorPos) + event.key + this.state.currentCmd.slice(this.state.currentCursorPos)\n            this.setState({currentCmd: newCommand}, () => this.moveCursor(1));\n        }\n        else if (event.keyCode === 8) { // Backspace\n            if (this.state.currentCursorPos > 0) {\n                const newCommand = this.state.currentCmd.slice(0, this.state.currentCursorPos - 1) + this.state.currentCmd.slice(this.state.currentCursorPos)\n                this.setState({currentCmd: newCommand}, () => this.moveCursor(-1));\n            }\n        }\n        else if (event.keyCode === 46) { // Delete\n            if (this.state.currentCursorPos < this.state.currentCmd.length) {\n                const newCommand = this.state.currentCmd.slice(0, this.state.currentCursorPos) + this.state.currentCmd.slice(this.state.currentCursorPos + 1)\n                this.setState({currentCmd: newCommand}, () => this.moveCursor(-1));\n            }\n        }\n        else if (event.keyCode === 13) { // Enter \n            const result = this.runCommand();\n            this.addNewOutputToBuffer(result);\n            if (this.state.currentCmd) {\n                this.setState({\n                    previousCmds: [this.state.currentCmd].concat(this.state.previousCmds),\n                    previousCmdsIndex: -1\n                });\n            }\n            this.setState({\n                currentCmd: '',\n                currentCursorPos: 0,\n            });\n\n            if (this.inputLine) {\n                this.inputLine.scrollIntoView({behavior: 'smooth'});\n            }\n        }\n        else if (event.keyCode === 37) {\n            this.moveCursor(-1);\n        }\n        else if (event.keyCode === 38) {\n            event.preventDefault()\n            if (this.state.previousCmdsIndex < this.state.previousCmds.length - 1 && this.state.previousCmds.length > 0) {\n                this.setState({\n                    previousCmdsIndex: this.state.previousCmdsIndex + 1,\n                    currentCmd: this.state.previousCmds[this.state.previousCmdsIndex + 1]\n                })\n                console.log(this.state.previousCmds)\n                console.log(this.state.previousCmdsIndex)\n            }\n        }\n        else if (event.keyCode === 39) {\n            this.moveCursor(1);\n        }\n        else if (event.keyCode === 40) {\n            event.preventDefault()\n            if (this.state.previousCmdsIndex > 0) {\n                this.setState({\n                    previousCmdsIndex: this.state.previousCmdsIndex - 1,\n                    currentCmd: this.state.previousCmds[this.state.previousCmdsIndex - 1]\n                })\n            }\n            else {\n                this.setState({\n                    previousCmdsIndex: -1,\n                    currentCmd: ' '\n                })\n            }\n            console.log(this.state.previousCmds)\n            console.log(this.state.previousCmdsIndex)\n        } \n    }\n\n    moveCursor(direction) {\n        let newCursorPos = this.state.currentCursorPos + direction;\n\n        if (newCursorPos < 0) {\n            newCursorPos = 0;\n        }\n        else if (newCursorPos > this.state.currentCmd.length) {\n            newCursorPos = this.state.currentCmd.length;\n        }\n\n        this.setState({\n            currentCursorPos: newCursorPos,\n            isCursorHighlighted: true\n        });\n        \n    }\n\n    addNewOutputToBuffer(cmdOutput) {\n        const newOutput = <div>\n                <p >{`${this.user}:${this.state.currentDir}$ ${this.state.currentCmd}`}</p>\n                <div className=\"CommandOutput\">{cmdOutput}</div>\n            </div>\n        this.setState({\n            outputBuffer: this.state.outputBuffer.concat([newOutput]),\n        })\n    }\n\n    renderInputLine() {\n        const cursorStyle = this.state.isCursorHighlighted ? \"CursorActive\" : \"CursorInactive\";\n\n        const prefix = `${this.user}:${this.state.currentDir}$`;\n        \n        const preCursor = this.state.currentCmd.slice(0, this.state.currentCursorPos);\n        const cursor = <span className={cursorStyle}>{this.state.currentCmd[this.state.currentCursorPos] ?? \" \"}</span>\n        const postCursor = this.state.currentCmd.slice(this.state.currentCursorPos + 1, this.state.currentCmd.length);\n        \n        return (\n            <div>{prefix} {preCursor}{cursor}{postCursor}</div>\n        );\n    }\n\n    runCommand() {\n        switch (this.state.currentCmd.trim()) {\n            case 'welcome':\n                return this.generateWelcomeMessage();\n            case 'socials':\n                return this.generateSocials();\n            case 'resume':\n                return this.displayResume();\n            case 'clear':\n                this.setState({outputBuffer: []});\n                return this.generateWelcomeMessage();\n            case 'matrix':\n                return (<Matrix length={25} width={30} speed={30}/>);\n            case '':\n                return ''\n            default:\n                return `Command: ${this.state.currentCmd} is not recognized by the system.`\n        }\n    }\n\n    generateWelcomeMessage() {\n        const welcomeMsg = this.config.welcome.split('\\n')\n        welcomeMsg[0] = <h1>{welcomeMsg[0]}</h1>\n        welcomeMsg[welcomeMsg.length - 1] = <h3>{welcomeMsg[welcomeMsg.length - 1]}</h3>\n        \n        const commands = this.config.commands.map((cmd, index) => <li key={`welcome_${index}`}><b onClick={this.commandClicked}>{cmd.name}</b>: {cmd.description}</li>);\n        \n        return welcomeMsg.concat(commands);\n    }\n\n    generateSocials() {\n        return this.config.socials.map(social => {\n            return <li>\n                        <h3>{social.name}</h3>\n                        <a href={social.url}>{social.url}</a>\n                    </li>\n        })\n    }\n\n    displayResume() {\n        return (\n            <div className=\"Resume\">\n                <h1 className=\"ResumeHeader\">{this.config.resume.header}</h1>\n                <h2 className=\"ResumeHeader\">Skills and Abilities</h2>\n                {this.config.resume.skills.map((line) => <li className=\"ResumeList\">{line}</li>)}\n                <h2 className=\"ResumeHeader\">Professional Experience</h2>\n                {this.config.resume.experience.map((experience) => {\n                    return (\n                        <div className=\"ResumeItem\">\n                            <h3 className=\"ResumeHeader\">{experience.title} @ {experience.company}</h3>\n                            <h4>{experience.location}; {experience.duration}</h4>\n                            {experience.responsibilities.map((resp) => <li className=\"ResumeList\">{resp}</li>)}\n                        </div>\n                    );\n                })}  \n            </div>\n        )\n    }\n}\n\nexport default Terminal","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Terminal from './Terminal';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Terminal />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}